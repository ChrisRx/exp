// Code generated by aliaspkg. DO NOT EDIT.

package log

import (
	"log"
)

// Print calls Output to print to the standard logger.
// Arguments are handled in the manner of [fmt.Print].
//
// This is an alias of https://pkg.go.dev/log#Print.
func Print(v ...any) {
	log.Print(v...)
}

// Printf calls Output to print to the standard logger.
// Arguments are handled in the manner of [fmt.Printf].
//
// This is an alias of https://pkg.go.dev/log#Printf.
func Printf(format string, v ...any) {
	log.Printf(format, v...)
}

// Println calls Output to print to the standard logger.
// Arguments are handled in the manner of [fmt.Println].
//
// This is an alias of https://pkg.go.dev/log#Println.
func Println(v ...any) {
	log.Println(v...)
}

// Fatal is equivalent to [Print] followed by a call to [os.Exit](1).
//
// This is an alias of https://pkg.go.dev/log#Fatal.
func Fatal(v ...any) {
	log.Fatal(v...)
}

// Fatalf is equivalent to [Printf] followed by a call to [os.Exit](1).
//
// This is an alias of https://pkg.go.dev/log#Fatalf.
func Fatalf(format string, v ...any) {
	log.Fatalf(format, v...)
}

// Fatalln is equivalent to [Println] followed by a call to [os.Exit](1).
//
// This is an alias of https://pkg.go.dev/log#Fatalln.
func Fatalln(v ...any) {
	log.Fatalln(v...)
}

// Panic is equivalent to [Print] followed by a call to panic().
//
// This is an alias of https://pkg.go.dev/log#Panic.
func Panic(v ...any) {
	log.Panic(v...)
}

// Panicf is equivalent to [Printf] followed by a call to panic().
//
// This is an alias of https://pkg.go.dev/log#Panicf.
func Panicf(format string, v ...any) {
	log.Panicf(format, v...)
}

// Panicln is equivalent to [Println] followed by a call to panic().
//
// This is an alias of https://pkg.go.dev/log#Panicln.
func Panicln(v ...any) {
	log.Panicln(v...)
}
